FS_SE_F1.plot
ggsave("figures/FS-SE-F1.png",FS_SE_F1.plot,height=4,width=6,units="in")
FS_SE_F2.plot = ggplot(data_FS_plots %>% filter(region == "South-East"), aes(x=lexSet,y=norm_F2,fill=lexSet)) +
geom_boxplot() +
theme_Caitlin() +
theme(legend.position = "none") +
FSFillScale +
scale_y_continuous(limits = c(600,2200), breaks = seq(0,3000,200))+
NULL
FS_SE_F2.plot
ggsave("figures/FS-SE-F2.png",FS_SE_F2.plot,height=4,width=6,units="in")
vowels.plot = ggplot(data_FS_plots, aes(x=norm_F2, y = norm_F1, color = lexSet, label = lexSet)) +
# geom_point(alpha = 0.7,  size = 1) +
theme_Caitlin() +
theme(legend.position = "none") +
stat_ellipse(level = 0.67, geom = "polygon", alpha = 0.2, aes(fill = corpus)) +
geom_label(data = data_FS_plots.means, aes(x = mean_F2, y = mean_F1)) +
scale_x_reverse(position = "top", limits = c(2000,1000), breaks = seq(0,2000,200)) +
scale_y_reverse(position = "right",limits = c(900,400), breaks = seq(0,1000,100)) +
FSColScale +
FSFillScale +
# facet_grid(rows=vars(corpus), cols=vars(sex)) +
facet_wrap(~id) +
NULL
# Vowel Space Plots ----------------------------------------------------------
data_FS_plots.means = ddply(data_FS_plots,.(lexSet),summarise,
mean_F2 = mean(norm_F2),
mean_F1 = mean(norm_F2))
data_FS_plots.means
vowels.plot = ggplot(data_FS_plots, aes(x=norm_F2, y = norm_F1, color = lexSet, label = lexSet)) +
# geom_point(alpha = 0.7,  size = 1) +
theme_Caitlin() +
theme(legend.position = "none") +
stat_ellipse(level = 0.67, geom = "polygon", alpha = 0.2, aes(fill = corpus)) +
geom_label(data = data_FS_plots.means, aes(x = mean_F2, y = mean_F1)) +
scale_x_reverse(position = "top", limits = c(2000,1000), breaks = seq(0,2000,200)) +
scale_y_reverse(position = "right",limits = c(900,400), breaks = seq(0,1000,100)) +
FSColScale +
FSFillScale +
# facet_grid(rows=vars(corpus), cols=vars(sex)) +
facet_wrap(~id) +
NULL
vowels.plot
vowels_id.plot = ggplot(data_FS_plots, aes(x=norm_F2, y = norm_F1, color = lexSet, label = lexSet)) +
# geom_point(alpha = 0.7,  size = 1) +
theme_Caitlin() +
theme(legend.position = "none") +
stat_ellipse(level = 0.67, geom = "polygon", alpha = 0.2, aes(fill = corpus)) +
geom_label(data = data_FS_plots.means, aes(x = mean_F2, y = mean_F1)) +
scale_x_reverse(position = "top", limits = c(2000,1000), breaks = seq(0,2000,200)) +
scale_y_reverse(position = "right",limits = c(900,400), breaks = seq(0,1000,100)) +
FSColScale +
FSFillScale +
# facet_grid(rows=vars(corpus), cols=vars(sex)) +
facet_wrap(~id) +
NULL
vowels_id.plot
FS_id.vplot = ggplot(data_FS_plots, aes(x=norm_F2, y = norm_F1, color = lexSet, label = lexSet)) +
# geom_point(alpha = 0.7,  size = 1) +
theme_Caitlin() +
theme(legend.position = "none") +
stat_ellipse(level = 0.67, geom = "polygon", alpha = 0.2, aes(fill = corpus)) +
geom_label(data = data_FS_plots.means, aes(x = mean_F2, y = mean_F1)) +
scale_x_reverse(position = "top", limits = c(2000,1000), breaks = seq(0,2000,200)) +
scale_y_reverse(position = "right",limits = c(900,400), breaks = seq(0,1000,100)) +
FSColScale +
FSFillScale +
# facet_grid(rows=vars(corpus), cols=vars(sex)) +
facet_wrap(~id) +
NULL
FS_id.vplot
ggsave("figures/FS-id-vplot.png",FS_id.vplot,height=4,width=6,units="in")
FS_corpus.vplot <- ggplot(data_FS_plots, aes(x=norm_F2, y = norm_F1, color = lexSet, label = lexSet)) +
# geom_point(alpha = 0.7,  size = 1) +
theme_Caitlin() +
theme(legend.position = "none") +
stat_ellipse(level = 0.67, geom = "polygon", alpha = 0.2, aes(fill = corpus)) +
geom_label(data = data_FS_plots.means, aes(x = mean_F2, y = mean_F1)) +
scale_x_reverse(position = "top", limits = c(2000,1000), breaks = seq(0,2000,200)) +
scale_y_reverse(position = "right",limits = c(900,400), breaks = seq(0,1000,100)) +
FSColScale +
FSFillScale +
# facet_grid(rows=vars(corpus), cols=vars(sex)) +
facet_wrap(~corpus) +
NULL
FS_corpus.vplot
ggsave("figures/FS-corpus-vplot.png",FS_corpus.vplot,height=4,width=6,units="in")
packages = c("lme4","stats","cAIC4","stargazer","tidymodels","broom.mixed","xtable","MASS","dplyr")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
install.packages('TMB',type='source')
install.packages("TMB", type = "source")
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus))))
# South East ####
data_FS_statsSE <- data_FS_stats %>% filter(corpus == "CoRP-SE")
data_strut_statsSE <- data_FS_stats %>%
filter(corpus == "CoRP-SE") %>%
filter(lexSet == "STRUT")
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
# North East ------------
data_FS_statsNE <- data_FS_stats %>% filter(corpus == "CoRP-NE")
data_strut_statsNE <- data_FS_stats %>%
filter(corpus == "CoRP-NE") %>%
filter(lexSet == "STRUT")
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F1.full.mod)
S_NE_F1.step.mod <- lmer(norm_F1 ~ ageGroup + sex + rowid_z + privateTotal + folMan +
folPlace + folVc + preSeg + folSeq + (1 | id) + (1 | word), data_strut_statsNE)
summary(S_NE_F1.step.mod)
summary(S_NE_F1.step.mod)
ranef(S_NE_F1.step.mod)
### STRUT ------------
S_NE_F1.full.mod <- lmer(norm_F2 ~ ageGroup +
sex +
rowid_z +
privateTotal +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F1.full.mod)
ranef(FS_NE_F1.full.mod)
### STRUT ------------
S_NE_F2.full.mod <- lmer(norm_F2 ~ ageGroup +
sex +
rowid_z +
privateTotal +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F2.full.mod)
ranef(FS_NE_F1.full.mod)
ranef(S_NE_F1.full.mod)
### STRUT ------------
S_NE_F2.full.mod <- lmer(norm_F2 ~ ageGroup +
sex +
rowid_z +
# privateTotal +
occClass +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F2.full.mod)
### STRUT ------------
S_NE_F2.full.mod <- lmer(norm_F2 ~ ageGroup +
sex +
rowid_z +
# privateTotal +
motherRegion +
fatherRegion +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F2.full.mod)
levels(data_FS_stats$fatherRegion)
levels(data_FS_stats$motherRegion)
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Lancashire="north"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Birmingham="north", Lancashire="north", Lincoln="north",London="south",mobile="mobile",North-East="north", Nottingham="north", Sheffield="north",South-East="south"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Birmingham="north"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Birmingham="north", Lancashire="north"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Birmingham="north", Lancashire="north", Lincoln="north"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Birmingham="north", Lancashire="north", Lincoln="north",London="south"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Birmingham="north", Lancashire="north", Lincoln="north",London="south",North-East="north",))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, Birmingham="north", Lancashire="north", Lincoln="north",London="south",North-East="north"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, "Birmingham"="north"))
levels(data_FS_stats$motherRegion)
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion = recode(motherRegion, "Birmingham"="north", "Lancashire"="north", "Lincoln"="north","London"="south","North-East"="north", "Nottingham"="north", "Sheffield"="north","South-East"="south"))
levels(data_FS_stats$motherRegion)
levels(data_FS_stats$fatherRegion)
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion_FS = recode(motherRegion, "Birmingham"="north", "Lancashire"="north", "Lincoln"="north","London"="south","North-East"="north", "Nottingham"="north", "Sheffield"="north","South-East"="south")) %>%
mutate(fatherRegion_FS = recode(fatherRegion, "IsleofMan"="north","North-East"="north","South-East"="south"))
ggsave("figures/FS-id-vplot.png",FS_id.vplot,height=8,width=12,units="in")
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
motherRegion_FS +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
motherRegion_FS +
fatherRegion_FS +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion_FS = recode(motherRegion, "Birmingham"="north", "Lancashire"="north", "Lincoln"="north","London"="south","North-East"="north", "Nottingham"="north", "Sheffield"="north","South-East"="south")) %>%
mutate(fatherRegion_FS = recode(fatherRegion, "IsleofMan"="north","North-East"="north","South-East"="south"))
# South East ####
data_FS_statsSE <- data_FS_stats %>% filter(corpus == "CoRP-SE")
data_strut_statsSE <- data_FS_stats %>%
filter(corpus == "CoRP-SE") %>%
filter(lexSet == "STRUT")
# North East ------------
data_FS_statsNE <- data_FS_stats %>% filter(corpus == "CoRP-NE")
data_strut_statsNE <- data_FS_stats %>%
filter(corpus == "CoRP-NE") %>%
filter(lexSet == "STRUT")
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
motherRegion_FS +
fatherRegion_FS +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F1.full.mod)
summary(S_NE_F1.full.mod)
summary(S_NE_F1.full.mod)
levels(data_FS_statsNE$motherRegion_FS)
levels(data_FS_statsNE$fatherRegion_FS)
table(data_FS_statsNE$fatherRegion_FS)
table(data_FS_statsNE$motherRegion_FS)
### STRUT ----
S_SE_F1.full.mod <- lmer(norm_F1 ~ sex +
ageGroup +
rowid_z +
privateTotal +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) + (1|word)
, data_strut_statsSE)
S_SE_F1.step <- cAIC4::stepcAIC(S_SE_F1.full.mod,calcNonOptimMod=TRUE,numberOfSavedModels = 2)
S_SE_F1.step
### STRUT ----
S_SE_F1.full.mod <- lmer(norm_F1 ~ sex +
ageGroup +
rowid_z +
privateTotal +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) + (1|word)
, data_strut_statsSE)
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
motherRegion_FS +
fatherRegion_FS +
folMan +
folPlace +
folVc +
preSeg +
folSeq +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F1.full.mod)
# data_outliers = inner_join(data_all,data_tbl)
data_clean = data_IQRoutliers %>%
mutate(folMan = plt_manner.fn(fm)) %>%
mutate(folPlace = plt_place.fn(fp)) %>%
mutate(folVc = plt_voice.fn(fv)) %>%
mutate(preSeg = plt_preseg.fn(ps)) %>%
mutate(folSeq = plt_folseq.fn(fs)) %>%
dplyr::select(rowNumber_all,rowid,word,norm_F1,norm_F2,dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, region, speakerNumber, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel,fatherEdLevel,parentEdLevelHigh,motherOccupation,fatherOccupation,parentOccClass,corpus,lexicalSet_broad,lexicalSet_narrow,folMan,folPlace,folVc,preSeg,folSeq) %>%
mutate(follSeq = recode(follSeq, "none" = "none", "oneSyll" = "oneSyll", "twoSyll" = "twoSyll", "complxcoda" = "complxcoda", "compcoda_onesyll" = "compcoda_sylls", "compcoda_twosyll" = "compcoda_sylls")) %>%
mutate(follSeq_small = recode(follSeq, "none" = "none", "oneSyll" = "Syll", "twoSyll" = "Syll", "complxcoda" = "complxcoda", "compcoda_sylls" = "Syll")) %>%
ungroup()
# data_outliers = inner_join(data_all,data_tbl)
data_clean = data_IQRoutliers %>%
mutate(folMan = plt_manner.fn(fm)) %>%
mutate(folPlace = plt_place.fn(fp)) %>%
mutate(folVc = plt_voice.fn(fv)) %>%
mutate(preSeg = plt_preseg.fn(ps)) %>%
mutate(folSeq = plt_folseq.fn(fs)) %>%
dplyr::select(rowNumber_all,rowid,word,norm_F1,norm_F2,dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, region, speakerNumber, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel,fatherEdLevel,parentEdLevelHigh,motherOccupation,fatherOccupation,parentOccClass,corpus,lexicalSet_broad,lexicalSet_narrow,folMan,folPlace,folVc,preSeg,folSeq) %>%
mutate(folSeq = recode(folSeq, "none" = "none", "oneSyll" = "oneSyll", "twoSyll" = "twoSyll", "complxcoda" = "complxcoda", "compcoda_onesyll" = "compcoda_sylls", "compcoda_twosyll" = "compcoda_sylls")) %>%
mutate(folSeq_small = recode(folSeq, "none" = "none", "oneSyll" = "Syll", "twoSyll" = "Syll", "complxcoda" = "complxcoda", "compcoda_sylls" = "Syll")) %>%
ungroup()
colnames(data_all)
colnames(data_clean)
data_FS = data_clean %>%
filter(lexicalSet_broad %in% c("FOOT","STRUT")) %>%
mutate(lexSet = lexicalSet_broad) %>%
droplevels() %>%
mutate(id = paste(id, corpus, sep = "_"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion_FS = recode(motherRegion, "Birmingham"="north", "Lancashire"="north", "Lincoln"="north","London"="south","North-East"="north", "Nottingham"="north", "Sheffield"="north","South-East"="south")) %>%
mutate(fatherRegion_FS = recode(fatherRegion, "IsleofMan"="north","North-East"="north","South-East"="south"))
data_FS_stats <- data_FS %>%
dplyr::select(rowNumber_all, rowid, word, norm_F1, norm_F2, dur, rowid_fac, rowNumber_all_fac, lastName, sex, DOB, age, ageGroup, corpus, id, juniorEd, SecondEd, sixthFEd, privateTotal, occupation, occClass, edLevel, fatherRegion, motherRegion, fatherEd, motherEd, motherEdLevel, fatherEdLevel, parentEdLevelHigh, motherOccupation, fatherOccupation, parentOccClass, lexicalSet_broad, lexicalSet_narrow, folMan, folPlace, folVc, preSeg, folSeq_small, lexSet) %>%
droplevels() %>%
mutate(rowid_z = scale(rowid)) %>%
mutate(privateTotal_z=scale(privateTotal)) %>%
mutate(corpus=factor(corpus, levels=rev(levels(corpus)))) %>%
mutate(motherRegion_FS = recode(motherRegion, "Birmingham"="north", "Lancashire"="north", "Lincoln"="north","London"="south","North-East"="north", "Nottingham"="north", "Sheffield"="north","South-East"="south")) %>%
mutate(fatherRegion_FS = recode(fatherRegion, "IsleofMan"="north","North-East"="north","South-East"="south"))
# South East ####
data_FS_statsSE <- data_FS_stats %>% filter(corpus == "CoRP-SE")
data_strut_statsSE <- data_FS_stats %>%
filter(corpus == "CoRP-SE") %>%
filter(lexSet == "STRUT")
# North East ------------
data_FS_statsNE <- data_FS_stats %>% filter(corpus == "CoRP-NE")
data_strut_statsNE <- data_FS_stats %>%
filter(corpus == "CoRP-NE") %>%
filter(lexSet == "STRUT")
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
motherRegion_FS +
fatherRegion_FS +
folMan +
folPlace +
folVc +
preSeg +
folSeq_small +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F1.full.mod)
### STRUT ----
S_NE_F1.full.mod <- lmer(norm_F1 ~ ageGroup +
sex +
rowid_z +
privateTotal +
motherRegion_FS +
fatherRegion_FS +
folMan +
folPlace +
folVc +
preSeg +
folSeq_small +
(1|id) +
(1|word),data_strut_statsNE)
summary(S_NE_F1.full.mod)
table(data_strut_statsNE$folVc)
ranef(S_NE_F1.full.mod)
source("scripts/FS_cleaning.R")
## Load and install packages, control options ####
## First specify the packages of interest
options(pillar.sigfig = 7)
packages = c("plyr","patchwork")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
hist(data_FS$norm_F1)
hist(data_FS$norm_F2)
ggplot(data_FS, aes(norm_F1)) +
geom_density()
ggplot(data_FS, aes(norm_F2)) +
geom_density()
shapiro.test(data_FS$norm_F2)
shapiro.test(data_FS$norm_F2[0:5000])
install.packages("nortest")
ad.test(data_FS)$norm_F2
library(norte
library(nortest
library(nortest)
ad.test(data_FS)$norm_F2
ad.test(data_FS$norm_F2)
ad.test(data_FS$norm_F1)

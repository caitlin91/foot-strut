theme_Caitlin <- function() {theme_bw(base_size = 12) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="transparent", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "grey80", size = 0.2),
panel.grid.minor = element_line(colour = "grey90", size = 0.5)
)}
# colours ####
# lexSet colours
FSColours <- c("#C70E7B", "#A6E000")
names(FSColours) = levels(data_FS_plots$lexSet)
FSFillScale <- scale_fill_manual(name = "lexSet", values = FSColours)
FSColScale <- scale_colour_manual(name= "lexSet", values = FSColours)
# region colours
regionColours <- c("#77b144","#524c95","#95524C")
names(regionColours) = levels(data_FS_plots$corpus)
regionFillScale <- scale_fill_manual(name = "corpus",values = regionColours)
regionColScale <- scale_colour_manual(name = "corpus",values=regionColours)
# Predictor eyeball check ####
## strut ####
STRUT_predcheck_F1.plot <- ggplot(data_FS_plots %>% filter(lexSet == "STRUT") %>% filter(corpus == "CoRP-NE"), aes(x = lexSet, y = norm_F1, fill = lexSet)) +
geom_boxplot() +
theme_Caitlin() +
theme(legend.position = "none") +
xlab("lexical set") +
ylab("F1 (Hz)") +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
FSFillScale +
# facet_wrap(~folMan) + #lose
# facet_wrap(~folPlace) + # lose
# facet_wrap(~folVc) + #lose
facet_wrap(~preSeg) + #lose
# facet_wrap(~folSeq_small) + # lose
NULL
STRUT_predcheck_F1.plot
#' Get package dependencies
#'
#' @param packs A string vector of package names
#'
#' @return A string vector with packs plus the names of any dependencies
getDependencies <- function(packs){
dependencyNames <- unlist(
tools::package_dependencies(packages = packs, db = available.packages(),
which = c("Depends", "Imports"),
recursive = TRUE))
packageNames <- union(packs, dependencyNames)
packageNames
}
# Calculate dependencies
packages <- getDependencies(c("mgcv"))
# Download the packages to the working directory.
# Package names and filenames are returned in a matrix.
setwd("E:/packages")
pkgInfo <- download.packages(pkgs = packages, destdir = getwd(), type = "win.binary")
# Save just the package file names (basename() strips off the full paths leaving just the filename)
write.csv(file = "pkgFilenames.csv", basename(pkgInfo[, 2]), row.names = FALSE)
#' Get package dependencies
#'
#' @param packs A string vector of package names
#'
#' @return A string vector with packs plus the names of any dependencies
getDependencies <- function(packs){
dependencyNames <- unlist(
tools::package_dependencies(packages = packs, db = available.packages(),
which = c("Depends", "Imports"),
recursive = TRUE))
packageNames <- union(packs, dependencyNames)
packageNames
}
# Calculate dependencies
packages <- getDependencies(c("mgcv","knitr","dplyr","ggplot2","tidymv","mgcv","itsadug","doFuture","parallel"))
# Download the packages to the working directory.
# Package names and filenames are returned in a matrix.
setwd("D:/packages")
pkgInfo <- download.packages(pkgs = packages, destdir = getwd(), type = "win.binary")
# Save just the package file names (basename() strips off the full paths leaving just the filename)
write.csv(file = "pkgFilenames.csv", basename(pkgInfo[, 2]), row.names = FALSE)
R.version()
R.version
R.version
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
source("scripts/FS_cleaning.R")
## Load and install packages, control options ####
## First specify the packages of interest
packages = c("patchwork","plyr","svglite")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
## Data ####
data_FS_plots <- data_FS %>%
droplevels() %>%
mutate(juniorEd = recode(juniorEd, "primary" = "state")) %>%
filter(style %in% c("interview","minimalpair","wordlist")) %>%
droplevels()
data_FST_plots <- data_FST %>%
droplevels() %>%
mutate(juniorEd = recode(juniorEd, "primary" = "state")) %>%
filter(style %in% c("interview","minimalpair","wordlist")) %>%
droplevels()
data_G_plots <- data_G %>%
droplevels() %>%
mutate(juniorEd = recode(juniorEd, "primary" = "state")) %>%
filter(style %in% c("interview","minimalpair","wordlist")) %>%
droplevels()
data_FSG_plots <- rbind(data_FS_plots,data_G_plots)
corpus_order <- c("CoRP-SE","DECTE-NE","CoRP-NE")
## theme ------------------------------------------
theme_Caitlin_present <- function() {theme_bw(base_size = 22) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="gray90", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "white", size = 0.2),
panel.grid.minor = element_line(colour = "grey98", size = 0.5))}
theme_Caitlin <- function() {theme_bw(base_size = 12) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="transparent", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "grey80", size = 0.2),
panel.grid.minor = element_line(colour = "grey90", size = 0.5)
)}
# colours ####
# lexSet colours
FSColours <- c("#C70E7B", "#A6E000")
names(FSColours) = levels(data_FS_plots$lexSet)
FSFillScale <- scale_fill_manual(name = "lexSet", values = FSColours)
FSColScale <- scale_colour_manual(name= "lexSet", values = FSColours)
# region colours
regionColours <- c("#77b144","#524c95","#95524C")
names(regionColours) = levels(data_FS_plots$corpus)
regionFillScale <- scale_fill_manual(name = "corpus",values = regionColours)
regionColScale <- scale_colour_manual(name = "corpus",values=regionColours)
# Predictor eyeball check ####
## strut ####
STRUT_predcheck_F1.plot <- ggplot(data_FS_plots %>% filter(lexSet == "STRUT") %>% filter(corpus == "CoRP-NE"), aes(x = lexSet, y = norm_F1, fill = lexSet)) +
geom_boxplot() +
theme_Caitlin() +
theme(legend.position = "none") +
xlab("lexical set") +
ylab("F1 (Hz)") +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
FSFillScale +
# facet_wrap(~folMan) + #lose
# facet_wrap(~folPlace) + # lose
# facet_wrap(~folVc) + #lose
facet_wrap(~preSeg) + #lose
# facet_wrap(~folSeq_small) + # lose
NULL
STRUT_predcheck_F1.plot
FS_F1.plot = FS_SE_F1.plot + FS_DE_F1.plot + FS_NE_F1.plot
FS_NE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "CoRP-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet,colour=ageGroup)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_NE.means, aes(y=mean_F1,lexSet,colour=ageGroup))+
# geom_line(data=data_FS_plots_NE.means, aes(y=mean_F1,x=lexSet,group=id,colour=ageGroup))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "right") +
# facet_grid(rows=vars(sex),cols=vars(ageGroup)) +
facet_wrap(~sex) +
scale_color_manual(values=c("black","grey90"))+
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
# ggtitle("\\scs{foot}-\\scs{strutt} (F1) CoRP-NE") +
ylab("F1 (Hz)") +
xlab("lexical set")+
NULL
FS_NE_F1.plot
FS_SE_F1.plot = ggplot(data_FS_plots %>% filter(corpus == "CoRP-SE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_SE.means, aes(y=mean_F1,lexSet))+
# geom_line(data=data_FS_plots_SE.means, aes(y=mean_F1,x=lexSet,group=id))+
theme_Caitlin() +
theme(legend.position = "none") +
xlab("lexical set") +
ylab("F1 (Hz)") +
scale_y_continuous(limits = c(300,1000), breaks = seq(0,1000,100))+
FSFillScale +
# ggtitle("\\scs{foot}-STRUT (F1) CoRP-SE") +
# facet_wrap(~sex) +
NULL
FS_SE_F1.plot
FS_SE_F1.plot = ggplot(data_FS_plots %>% filter(corpus == "CoRP-SE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_SE.means, aes(y=mean_F1,lexSet))+
# geom_line(data=data_FS_plots_SE.means, aes(y=mean_F1,x=lexSet,group=id))+
theme_Caitlin() +
theme(legend.position = "none") +
xlab("lexical set") +
ylab("F1 (Hz)") +
scale_y_continuous(limits = c(300,1000), breaks = seq(0,1000,100))+
FSFillScale +
ggtitle("FOOT-STRUT (F1) RP-SE") +
# facet_wrap(~sex) +
NULL
FS_SE_F1.plot
FS_DE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "DECTE-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
geom_point(data=data_FS_plots_DE.means, aes(y=mean_F1,lexSet,colour=NULL))+
geom_line(data=data_FS_plots_DE.means, aes(y=mean_F1,x=lexSet,group=id,colour=NULL))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "none") +
# facet_wrap(~id)+
# facet_grid(rows=vars(sex),cols=vars(id)) +
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) Tyneside ENglish") +
ylab("F1 (Hz)") +
xlab("lexical set") +
NULL
# DECTE ####
data_FS_plots_DE.means = as_tibble(ddply(data_FS_plots%>% filter(corpus == "DECTE-NE"),.(id,sex,lexSet),summarise,
mean_F2 = mean(norm_F2),
mean_F1 = mean(norm_F1)))
data_FS_plots_DE.means
FS_DE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "DECTE-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
geom_point(data=data_FS_plots_DE.means, aes(y=mean_F1,lexSet,colour=NULL))+
geom_line(data=data_FS_plots_DE.means, aes(y=mean_F1,x=lexSet,group=id,colour=NULL))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "none") +
# facet_wrap(~id)+
# facet_grid(rows=vars(sex),cols=vars(id)) +
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) Tyneside ENglish") +
ylab("F1 (Hz)") +
xlab("lexical set") +
NULL
FS_DE_F1.plot
FS_DE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "DECTE-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_DE.means, aes(y=mean_F1,lexSet,colour=NULL))+
# geom_line(data=data_FS_plots_DE.means, aes(y=mean_F1,x=lexSet,group=id,colour=NULL))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "none") +
# facet_wrap(~id)+
# facet_grid(rows=vars(sex),cols=vars(id)) +
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) Tyneside ENglish") +
ylab("F1 (Hz)") +
xlab("lexical set") +
NULL
FS_DE_F1.plot
FS_F1.plot = FS_SE_F1.plot + FS_DE_F1.plot + FS_NE_F1.plot
FS_F1.plot
FS_NE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "CoRP-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet,colour=ageGroup)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_NE.means, aes(y=mean_F1,lexSet,colour=ageGroup))+
# geom_line(data=data_FS_plots_NE.means, aes(y=mean_F1,x=lexSet,group=id,colour=ageGroup))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "right") +
# facet_grid(rows=vars(sex),cols=vars(ageGroup)) +
facet_wrap(~sex) +
scale_color_manual(values=c("black","grey90"))+
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) CoRP-NE") +
ylab("F1 (Hz)") +
xlab("lexical set")+
NULL
FS_NE_F1.plot
FS_F1.plot = FS_SE_F1.plot + FS_DE_F1.plot + FS_NE_F1.plot
FS_F1.plot
FS_NE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "CoRP-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet
# ,colour=ageGroup
)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_NE.means, aes(y=mean_F1,lexSet,colour=ageGroup))+
# geom_line(data=data_FS_plots_NE.means, aes(y=mean_F1,x=lexSet,group=id,colour=ageGroup))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "right") +
# facet_grid(rows=vars(sex),cols=vars(ageGroup)) +
facet_wrap(~sex) +
scale_color_manual(values=c("black","grey90"))+
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) CoRP-NE") +
ylab("F1 (Hz)") +
xlab("lexical set")+
NULL
FS_NE_F1.plot
# NE speakers ------------------------
data_FS_plots_NE.means = as_tibble(ddply(data_FS_plots%>% filter(corpus == "CoRP-NE"),.(id,sex,lexSet,ageGroup),summarise,
mean_F2 = mean(norm_F2),
mean_F1 = mean(norm_F1)))
data_FS_plots_NE.means
FS_NE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "CoRP-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet
# ,colour=ageGroup
)) +
geom_boxplot() +
geom_point(data=data_FS_plots_NE.means, aes(y=mean_F1,lexSet,colour=ageGroup))+
geom_line(data=data_FS_plots_NE.means, aes(y=mean_F1,x=lexSet,group=id,colour=ageGroup))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "right") +
# facet_grid(rows=vars(sex),cols=vars(ageGroup)) +
facet_wrap(~sex) +
scale_color_manual(values=c("black","grey90"))+
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) CoRP-NE") +
ylab("F1 (Hz)") +
xlab("lexical set")+
NULL
FS_NE_F1.plot
FS_NE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "CoRP-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet
# ,colour=ageGroup
)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_NE.means, aes(y=mean_F1,lexSet,colour=ageGroup))+
# geom_line(data=data_FS_plots_NE.means, aes(y=mean_F1,x=lexSet,group=id,colour=ageGroup))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "right") +
# facet_grid(rows=vars(sex),cols=vars(ageGroup)) +
facet_wrap(~sex) +
scale_color_manual(values=c("black","grey90"))+
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) CoRP-NE") +
ylab("F1 (Hz)") +
xlab("lexical set")+
NULL
FS_NE_F1.plot
FS_F1.plot = FS_SE_F1.plot + FS_DE_F1.plot + FS_NE_F1.plot
FS_F1.plot
png(FS-F1-plot,height = 400, width = 800)
png("FS-F1-plot.png",height = 400, width = 800)
FS_F1.plot
png("H:/Desktop/NWAV plots/FS-F1-plot.png",height = 400, width = 800)
FS_F1.plot
dev.off()
FS_DE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "DECTE-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_DE.means, aes(y=mean_F1,lexSet,colour=NULL))+
# geom_line(data=data_FS_plots_DE.means, aes(y=mean_F1,x=lexSet,group=id,colour=NULL))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "none") +
# facet_wrap(~id)+
# facet_grid(rows=vars(sex),cols=vars(id)) +
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) Tyneside English") +
ylab("F1 (Hz)") +
xlab("lexical set") +
NULL
FS_DE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "DECTE-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_DE.means, aes(y=mean_F1,lexSet,colour=NULL))+
# geom_line(data=data_FS_plots_DE.means, aes(y=mean_F1,x=lexSet,group=id,colour=NULL))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "none") +
# facet_wrap(~id)+
# facet_grid(rows=vars(sex),cols=vars(id)) +
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) Tyneside English") +
ylab("F1 (Hz)") +
xlab("lexical set") +
NULL
FS_F1.plot = FS_SE_F1.plot + FS_DE_F1.plot + FS_NE_F1.plot
png("H:/Desktop/NWAV plots/FS-F1-plot.png",height = 400, width = 800)
FS_F1.plot
dev.off()
FS_DE_F1.plot <- ggplot(data_FS_plots %>% filter(corpus == "DECTE-NE"), aes(x=lexSet,y=norm_F1,fill=lexSet)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_DE.means, aes(y=mean_F1,lexSet,colour=NULL))+
# geom_line(data=data_FS_plots_DE.means, aes(y=mean_F1,x=lexSet,group=id,colour=NULL))+
xlab("lexical set") +
ylab("F1 (Hz)") +
theme_Caitlin() +
theme(legend.position = "none") +
# facet_wrap(~id)+
# facet_grid(rows=vars(sex),cols=vars(id)) +
FSFillScale +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
ggtitle("FOOT-STRUT (F1) \nTyneside English") +
ylab("F1 (Hz)") +
xlab("lexical set") +
NULL
FS_DE_F1.plot
FS_F1.plot = FS_SE_F1.plot + FS_DE_F1.plot + FS_NE_F1.plot
png("H:/Desktop/NWAV plots/FS-F1-plot.png",height = 400, width = 800)
FS_F1.plot
dev.off()
FS_NE_F2.plot = ggplot(data_FS_plots %>% filter(corpus == "CoRP-NE"), aes(x=lexSet,y=norm_F2,fill=lexSet)) +
geom_boxplot() +
# geom_point(data=data_FS_plots_NE.means, aes(y=mean_F2,lexSet,colour=NULL))+
# geom_line(data=data_FS_plots_NE.means, aes(y=mean_F2,x=lexSet,group=id,colour=NULL))+
xlab("lexical set") +
ylab("F2 (Hz)") +
theme_Caitlin() +
theme(legend.position = "none") +
facet_wrap(~sex) +
# facet_wrap(~id) +
# scale_color_manual(values=c("black","grey90"))+
ggtitle("FOOT-STRUT (F1) RP-NE") +
FSFillScale +
scale_y_continuous(limits = c(600,2200), breaks = seq(0,3000,200))+
NULL
source("scripts/FS_cleaning.R")
## Load and install packages, control options ####
## First specify the packages of interest
packages = c("patchwork","plyr","svglite")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
## Data ####
data_FS_plots <- data_FS %>%
droplevels() %>%
mutate(juniorEd = recode(juniorEd, "primary" = "state")) %>%
filter(style %in% c("interview","minimalpair","wordlist")) %>%
droplevels()
data_FST_plots <- data_FST %>%
droplevels() %>%
mutate(juniorEd = recode(juniorEd, "primary" = "state")) %>%
filter(style %in% c("interview","minimalpair","wordlist")) %>%
droplevels()
data_G_plots <- data_G %>%
droplevels() %>%
mutate(juniorEd = recode(juniorEd, "primary" = "state")) %>%
filter(style %in% c("interview","minimalpair","wordlist")) %>%
droplevels()
data_FSG_plots <- rbind(data_FS_plots,data_G_plots)
corpus_order <- c("CoRP-SE","DECTE-NE","CoRP-NE")
## theme ------------------------------------------
theme_Caitlin_present <- function() {theme_bw(base_size = 22) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="gray90", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "white", size = 0.2),
panel.grid.minor = element_line(colour = "grey98", size = 0.5))}
theme_Caitlin <- function() {theme_bw(base_size = 12) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="transparent", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "grey80", size = 0.2),
panel.grid.minor = element_line(colour = "grey90", size = 0.5)
)}
# colours ####
# lexSet colours
FSColours <- c("#C70E7B", "#A6E000")
names(FSColours) = levels(data_FS_plots$lexSet)
FSFillScale <- scale_fill_manual(name = "lexSet", values = FSColours)
FSColScale <- scale_colour_manual(name= "lexSet", values = FSColours)
# region colours
regionColours <- c("#77b144","#524c95","#95524C")
names(regionColours) = levels(data_FS_plots$corpus)
regionFillScale <- scale_fill_manual(name = "corpus",values = regionColours)
regionColScale <- scale_colour_manual(name = "corpus",values=regionColours)
# Predictor eyeball check ####
## strut ####
STRUT_predcheck_F1.plot <- ggplot(data_FS_plots %>% filter(lexSet == "STRUT") %>% filter(corpus == "CoRP-NE"), aes(x = lexSet, y = norm_F1, fill = lexSet)) +
geom_boxplot() +
theme_Caitlin() +
theme(legend.position = "none") +
xlab("lexical set") +
ylab("F1 (Hz)") +
scale_y_continuous(limits = c(200,1000), breaks = seq(0,1000,100))+
FSFillScale +
# facet_wrap(~folMan) + #lose
# facet_wrap(~folPlace) + # lose
# facet_wrap(~folVc) + #lose
facet_wrap(~preSeg) + #lose
# facet_wrap(~folSeq_small) + # lose
NULL
STRUT_predcheck_F1.plot
